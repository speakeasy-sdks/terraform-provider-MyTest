// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package provider

import (
	"MyTest/internal/sdk/pkg/models/shared"
	"github.com/hashicorp/terraform-plugin-framework/types"
)

func (r *ZoneDataSourceModel) RefreshFromGetResponse(resp *shared.Zone) {
	if resp.AccountID != nil {
		r.AccountID = types.Int64Value(*resp.AccountID)
	} else {
		r.AccountID = types.Int64Null()
	}
	if resp.Code != nil {
		r.Code = types.StringValue(*resp.Code)
	} else {
		r.Code = types.StringNull()
	}
	if resp.Config == nil {
		r.Config = nil
	} else {
		r.Config = &ZoneConfig{}
		if resp.Config.ZoneVcenterConfig != nil {
			r.Config.ZoneVcenterConfig = &ZoneVcenterConfig{}
			if resp.Config.ZoneVcenterConfig.APIURL != nil {
				r.Config.ZoneVcenterConfig.APIURL = types.StringValue(*resp.Config.ZoneVcenterConfig.APIURL)
			} else {
				r.Config.ZoneVcenterConfig.APIURL = types.StringNull()
			}
			if resp.Config.ZoneVcenterConfig.ApplianceURL != nil {
				r.Config.ZoneVcenterConfig.ApplianceURL = types.StringValue(*resp.Config.ZoneVcenterConfig.ApplianceURL)
			} else {
				r.Config.ZoneVcenterConfig.ApplianceURL = types.StringNull()
			}
			if resp.Config.ZoneVcenterConfig.Datacenter != nil {
				r.Config.ZoneVcenterConfig.Datacenter = types.StringValue(*resp.Config.ZoneVcenterConfig.Datacenter)
			} else {
				r.Config.ZoneVcenterConfig.Datacenter = types.StringNull()
			}
		}
	}
	if r.Credential == nil {
		r.Credential = &ZoneCredential{}
	}
	if resp.Credential == nil {
		r.Credential = nil
	} else {
		r.Credential = &ZoneCredential{}
		if resp.Credential.ID != nil {
			r.Credential.ID = types.Int64Value(*resp.Credential.ID)
		} else {
			r.Credential.ID = types.Int64Null()
		}
	}
	if resp.Enabled != nil {
		r.Enabled = types.BoolValue(*resp.Enabled)
	} else {
		r.Enabled = types.BoolNull()
	}
	r.Groups = nil
	for _, groupsItem := range resp.Groups {
		var groups1 ZoneGroups
		if groupsItem.AccountID != nil {
			groups1.AccountID = types.Int64Value(*groupsItem.AccountID)
		} else {
			groups1.AccountID = types.Int64Null()
		}
		if groupsItem.ID != nil {
			groups1.ID = types.Int64Value(*groupsItem.ID)
		} else {
			groups1.ID = types.Int64Null()
		}
		if groupsItem.Name != nil {
			groups1.Name = types.StringValue(*groupsItem.Name)
		} else {
			groups1.Name = types.StringNull()
		}
		r.Groups = append(r.Groups, groups1)
	}
	if resp.ID != nil {
		r.ID = types.Int64Value(*resp.ID)
	} else {
		r.ID = types.Int64Null()
	}
	if resp.Name != nil {
		r.Name = types.StringValue(*resp.Name)
	} else {
		r.Name = types.StringNull()
	}
	if resp.ScalePriority != nil {
		r.ScalePriority = types.Int64Value(*resp.ScalePriority)
	} else {
		r.ScalePriority = types.Int64Null()
	}
	if resp.Visibility != nil {
		r.Visibility = types.StringValue(*resp.Visibility)
	} else {
		r.Visibility = types.StringNull()
	}
	if r.ZoneType == nil {
		r.ZoneType = &ZoneZoneType{}
	}
	if resp.ZoneType == nil {
		r.ZoneType = nil
	} else {
		r.ZoneType = &ZoneZoneType{}
		if resp.ZoneType.Code != nil {
			r.ZoneType.Code = types.StringValue(*resp.ZoneType.Code)
		} else {
			r.ZoneType.Code = types.StringNull()
		}
	}
}
